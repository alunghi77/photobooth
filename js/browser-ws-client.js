// Generated by CoffeeScript 1.3.3
(function() {
  var chat, create_chat;

  create_chat = function(msg) {
    var html, template;
    template = Handlebars.compile($("#chatItem-tmpl").html());
    html = $.trim(template({
      "msg": msg
    }));
    console.log(msg);
    $(".chat-scroller").mCustomScrollbar("update");
    $(".chat-scroller .mCSB_container").append(html);
    $(".chat-scroller").mCustomScrollbar("scrollTo", "bottom", {
      scrollInertia: 250,
      scrollEasing: "easeInOutQuad"
    });
    return false;
  };

  chat = function() {
    var connection, input, status, takePhoto;
    input = $("#form_chat");
    status = $(".status h4");
    takePhoto = $("#take_photo");
    status.closest(".status").slideUp("fast");
    window.WebSocket = window.WebSocket || window.MozWebSocket;
    if (!window.WebSocket) {
      status.html($('<p>', {
        text: 'Sorry, but your browser doesn\'t support WebSockets.'
      }));
      return;
    }
    connection = new WebSocket('ws://192.168.1.116:1337');
    connection.onopen = function() {
      status.closest(".status").removeClass("alert-error").addClass("alert-success");
      status.closest(".status").slideDown("fast");
      status.html('<i class="icon-ok"></i> Success - You are connected.');
      status.closest(".status").delay(3000).slideUp("slow");
      return input.removeAttr('disabled');
    };
    connection.onerror = function(error) {
      return status.html($('<p>', {
        text: 'Sorry, but there\'s some problem with your connection or the server is down.'
      }));
    };
    connection.onmessage = function(message) {
      var currentMsg;
      try {
        currentMsg = JSON.parse(message.data);
      } catch (e) {
        console.log('This doesn\'t look like a valid JSON: ', message.data);
      }
      if (currentMsg.type === "message") {
        input.removeAttr('disabled');
        return create_chat(currentMsg);
      } else {
        return console.log('Hmm..., I\'ve never seen JSON like this: ', json);
      }
    };
    input.keydown(function(e) {
      var msg, myName;
      if (e.keyCode === 13) {
        msg = $(this).val();
        if (!msg) {
          return;
        }
        connection.send(msg);
        $(this).val('');
        input.attr('disabled', 'disabled');
        if (myName === false) {
          return myName = msg;
        }
      }
    });
    takePhoto.on("click", function() {
      connection.send("take_photo");
      return false;
    });
    return setInterval(function() {
      if (connection.readyState !== 1) {
        status.closest(".status").removeClass("alert-success").addClass("alert-error");
        status.closest(".status").slideDown("fast");
        status.html('<i class="icon-warning-sign"></i> Error - Unable to communicate with Photobooth server.');
        return input.attr('disabled', 'disabled');
      }
    }, 3000);
  };

  $(function() {
    var client;
    chat();
    if ($(".chat-scroller").length > 0) {
      $(".chat-scroller").mCustomScrollbar({
        scrollButtons: {
          enable: true
        }
      });
    }
    client = new BinaryClient('ws://192.168.1.116:9000');
    return client.on('stream', function(stream, meta) {
      var parts;
      parts = [];
      stream.on('data', function(data) {
        return parts.push(data);
      });
      return stream.on('end', function() {
        var img;
        img = document.createElement("img");
        img.src = (window.URL || window.webkitURL).createObjectURL(new Blob(parts));
        return document.body.appendChild(img);
      });
    });
  });

}).call(this);
